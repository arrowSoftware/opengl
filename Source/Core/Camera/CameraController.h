#ifndef _CAMERA_CONTROLLER_H_
#define _CAMERA_CONTROLLER_H_

// STL Includes.
#include <vector>

// Project Includes.
#include "Camera.h"
#include "EventObserver.h"
#include "InputManager.h"

class CameraController : public EventObserver
{
public:
    ////////////////////////////////////////////////////////////////////////////
    // Function:
    //
    // Description:
    //
    // Parameters:
    //
    // Returns:
    //
    ////////////////////////////////////////////////////////////////////////////
    CameraController(void);

    ////////////////////////////////////////////////////////////////////////////
    // Function:
    //
    // Description:
    //
    // Parameters:
    //
    // Returns:
    //
    ////////////////////////////////////////////////////////////////////////////
    void registerWith(InputManager &manager);

    ////////////////////////////////////////////////////////////////////////////
    // Function:
    //
    // Description:
    //
    // Parameters:
    //
    // Returns:
    //
    ////////////////////////////////////////////////////////////////////////////
    virtual void OnEvent(ApplicationEventStruct event);

    ////////////////////////////////////////////////////////////////////////////
    // Function:
    //
    // Description:
    //
    // Parameters:
    //
    // Returns:
    //
    ////////////////////////////////////////////////////////////////////////////
    void update(void);

    ////////////////////////////////////////////////////////////////////////////
    // Function:
    //
    // Description:
    //
    // Parameters:
    //
    // Returns:
    //
    ////////////////////////////////////////////////////////////////////////////
    glm::mat4 getView(void);

    ////////////////////////////////////////////////////////////////////////////
    // Function:
    //
    // Description:
    //
    // Parameters:
    //
    // Returns:
    //
    ////////////////////////////////////////////////////////////////////////////
    glm::vec3 getPosition(void);

private:
    //
    Camera _camera;

    //
    std::vector<ApplicationEventType> mEventStates;

    //
    ApplicationEventDataStruct mCursorData;

    //
    ApplicationEventDataStruct mPrevCursorData;

    ////////////////////////////////////////////////////////////////////////////
    // Function:
    //
    // Description:
    //
    // Parameters:
    //
    // Returns:
    //
    ////////////////////////////////////////////////////////////////////////////
    void updatePosition(void);

    ////////////////////////////////////////////////////////////////////////////
    // Function:
    //
    // Description:
    //
    // Parameters:
    //
    // Returns:
    //
    ////////////////////////////////////////////////////////////////////////////
    void updateFacing(void);
};

#endif
